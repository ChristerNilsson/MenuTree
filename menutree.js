// Generated by CoffeeScript 2.7.0
var Button, buttons, current, draw, echo, indexes, path, tree, update,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; },
  indexOf = [].indexOf;

echo = console.log;

tree = null;

buttons = [];

current = null; // pekar på ett delträd

path = []; // anger hela trädet

indexes = [0]; // default markeras första valet

Button = class Button {
  constructor(text1, x, y, index1) {
    this.text = text1;
    this.x = x;
    this.y = y;
    this.index = index1;
  }

  draw() {
    fill(this.index === _.last(indexes) ? 'yellow' : 'black');
    return text(this.text, this.x, this.y);
  }

};

window.preload = function() {
  return tree = loadJSON('menutree.json');
};

window.setup = function() {
  var i, keys;
  createCanvas(200, 300);
  noStroke();
  current = path.length === 0 ? tree : _.get(tree, path);
  echo('path', path);
  echo('current', current);
  keys = _.keys(current);
  buttons = (function() {
    var j, len, ref, results;
    ref = _.range(keys.length);
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      results.push(new Button(keys[i], 10, 40 + 20 * i, i));
    }
    return results;
  })();
  echo('buttons', buttons);
  return draw();
};

draw = function() {
  var button, j, len, s;
  echo('draw', typeof current);
  background('gray');
  if ('string' === typeof current) {
    text(current, 10, 200);
  }
  if ('object' === typeof current) {
    for (j = 0, len = buttons.length; j < len; j++) {
      button = buttons[j];
      button.draw();
    }
  }
  s = path.join(' • ');
  fill('white');
  echo('s', s);
  return text(s, 10, 20);
};

update = function() {
  var i, keys;
  current = path.length === 0 ? tree : _.get(tree, path);
  keys = _.keys(current);
  return buttons = (function() {
    var j, len, ref, results;
    ref = _.range(keys.length);
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      results.push(new Button(keys[i], 10, 40 + 20 * i, i));
    }
    return results;
  })();
};

window.keyPressed = function() {
  var index, n;
  echo(key);
  n = indexes.length;
  echo('n', n);
  index = indexes[n - 1];
  if (key === 'ArrowDown') {
    index = modulo(index + 1, buttons.length);
  }
  if (key === 'ArrowUp') {
    index = modulo(index - 1, buttons.length);
  }
  indexes[n - 1] = index;
  echo('indexes', indexes, n);
  if (indexOf.call('Escape ArrowLeft'.split(' '), key) >= 0) {
    if (path.length === 0 || indexes.length === 1) {
      return;
    }
    path.pop();
    indexes.pop();
    update();
  }
  if (indexOf.call('Enter ArrowRight'.split(' '), key) >= 0) {
    path.push(buttons[_.last(indexes)].text);
    indexes.push(0);
    update();
  }
  return draw();
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudXRyZWUuanMiLCJzb3VyY2VSb290IjoiXFwiLCJzb3VyY2VzIjpbIm1lbnV0cmVlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxNQUFBLEVBQUEsT0FBQSxFQUFBLE9BQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLE9BQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLE1BQUE7RUFBQTs7O0FBQUEsSUFBQSxHQUFPLE9BQU8sQ0FBQzs7QUFDZixJQUFBLEdBQU87O0FBQ1AsT0FBQSxHQUFVOztBQUVWLE9BQUEsR0FBVSxLQUpWOztBQU1BLElBQUEsR0FBTyxHQU5QOztBQU9BLE9BQUEsR0FBVSxDQUFDLENBQUQsRUFQVjs7QUFTTSxTQUFOLE1BQUEsT0FBQTtFQUNDLFdBQWMsTUFBQSxHQUFBLEdBQUEsUUFBQSxDQUFBO0lBQUMsSUFBQyxDQUFBO0lBQU0sSUFBQyxDQUFBO0lBQUcsSUFBQyxDQUFBO0lBQUcsSUFBQyxDQUFBO0VBQWpCOztFQUNkLElBQU8sQ0FBQSxDQUFBO0lBQ04sSUFBQSxDQUFRLElBQUMsQ0FBQSxLQUFELEtBQVUsQ0FBQyxDQUFDLElBQUYsQ0FBTyxPQUFQLENBQWIsR0FBaUMsUUFBakMsR0FBK0MsT0FBcEQ7V0FDQSxJQUFBLENBQUssSUFBQyxDQUFBLElBQU4sRUFBVyxJQUFDLENBQUEsQ0FBWixFQUFjLElBQUMsQ0FBQSxDQUFmO0VBRk07O0FBRlI7O0FBTUEsTUFBTSxDQUFDLE9BQVAsR0FBaUIsUUFBQSxDQUFBLENBQUE7U0FBRyxJQUFBLEdBQU8sUUFBQSxDQUFTLGVBQVQ7QUFBVjs7QUFFakIsTUFBTSxDQUFDLEtBQVAsR0FBZSxRQUFBLENBQUEsQ0FBQTtBQUNmLE1BQUEsQ0FBQSxFQUFBO0VBQUMsWUFBQSxDQUFhLEdBQWIsRUFBa0IsR0FBbEI7RUFDQSxRQUFBLENBQUE7RUFDQSxPQUFBLEdBQWEsSUFBSSxDQUFDLE1BQUwsS0FBZSxDQUFsQixHQUF5QixJQUF6QixHQUFtQyxDQUFDLENBQUMsR0FBRixDQUFNLElBQU4sRUFBWSxJQUFaO0VBQzdDLElBQUEsQ0FBSyxNQUFMLEVBQVksSUFBWjtFQUNBLElBQUEsQ0FBSyxTQUFMLEVBQWdCLE9BQWhCO0VBRUEsSUFBQSxHQUFPLENBQUMsQ0FBQyxJQUFGLENBQU8sT0FBUDtFQUNQLE9BQUE7O0FBQVc7QUFBQTtJQUFBLEtBQUEscUNBQUE7O21CQUFBLElBQUksTUFBSixDQUFXLElBQUksQ0FBQyxDQUFELENBQWYsRUFBbUIsRUFBbkIsRUFBc0IsRUFBQSxHQUFHLEVBQUEsR0FBRyxDQUE1QixFQUE4QixDQUE5QjtJQUFBLENBQUE7OztFQUNYLElBQUEsQ0FBSyxTQUFMLEVBQWUsT0FBZjtTQUVBLElBQUEsQ0FBQTtBQVhjOztBQWFmLElBQUEsR0FBTyxRQUFBLENBQUEsQ0FBQTtBQUVQLE1BQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUE7RUFBQyxJQUFBLENBQUssTUFBTCxFQUFhLE9BQU8sT0FBcEI7RUFDQSxVQUFBLENBQVcsTUFBWDtFQUNBLElBQUcsUUFBQSxLQUFZLE9BQU8sT0FBdEI7SUFDQyxJQUFBLENBQUssT0FBTCxFQUFhLEVBQWIsRUFBZ0IsR0FBaEIsRUFERDs7RUFFQSxJQUFHLFFBQUEsS0FBWSxPQUFPLE9BQXRCO0lBQ0MsS0FBQSx5Q0FBQTs7TUFDQyxNQUFNLENBQUMsSUFBUCxDQUFBO0lBREQsQ0FERDs7RUFHQSxDQUFBLEdBQUksSUFBSSxDQUFDLElBQUwsQ0FBVSxLQUFWO0VBQ0osSUFBQSxDQUFLLE9BQUw7RUFDQSxJQUFBLENBQUssR0FBTCxFQUFTLENBQVQ7U0FDQSxJQUFBLENBQUssQ0FBTCxFQUFRLEVBQVIsRUFBWSxFQUFaO0FBWk07O0FBY1AsTUFBQSxHQUFTLFFBQUEsQ0FBQSxDQUFBO0FBQ1QsTUFBQSxDQUFBLEVBQUE7RUFBQyxPQUFBLEdBQWEsSUFBSSxDQUFDLE1BQUwsS0FBZSxDQUFsQixHQUF5QixJQUF6QixHQUFtQyxDQUFDLENBQUMsR0FBRixDQUFNLElBQU4sRUFBWSxJQUFaO0VBQzdDLElBQUEsR0FBTyxDQUFDLENBQUMsSUFBRixDQUFPLE9BQVA7U0FDUCxPQUFBOztBQUFXO0FBQUE7SUFBQSxLQUFBLHFDQUFBOzttQkFBQSxJQUFJLE1BQUosQ0FBVyxJQUFJLENBQUMsQ0FBRCxDQUFmLEVBQW1CLEVBQW5CLEVBQXNCLEVBQUEsR0FBRyxFQUFBLEdBQUcsQ0FBNUIsRUFBOEIsQ0FBOUI7SUFBQSxDQUFBOzs7QUFISDs7QUFLVCxNQUFNLENBQUMsVUFBUCxHQUFvQixRQUFBLENBQUEsQ0FBQTtBQUNwQixNQUFBLEtBQUEsRUFBQTtFQUFDLElBQUEsQ0FBSyxHQUFMO0VBRUEsQ0FBQSxHQUFJLE9BQU8sQ0FBQztFQUNaLElBQUEsQ0FBSyxHQUFMLEVBQVMsQ0FBVDtFQUNBLEtBQUEsR0FBUSxPQUFPLENBQUMsQ0FBQSxHQUFFLENBQUg7RUFDZixJQUFHLEdBQUEsS0FBTyxXQUFWO0lBQTJCLEtBQUEsVUFBUyxLQUFBLEdBQVEsR0FBTSxPQUFPLENBQUMsUUFBMUQ7O0VBQ0EsSUFBRyxHQUFBLEtBQU8sU0FBVjtJQUEyQixLQUFBLFVBQVMsS0FBQSxHQUFRLEdBQU0sT0FBTyxDQUFDLFFBQTFEOztFQUNBLE9BQU8sQ0FBQyxDQUFBLEdBQUUsQ0FBSCxDQUFQLEdBQWU7RUFDZixJQUFBLENBQUssU0FBTCxFQUFlLE9BQWYsRUFBdUIsQ0FBdkI7RUFFQSxpQkFBVSxrQkFBa0IsQ0FBQyxLQUFuQixDQUF5QixHQUF6QixHQUFQLFNBQUg7SUFDQyxJQUFHLElBQUksQ0FBQyxNQUFMLEtBQWUsQ0FBZixJQUFvQixPQUFPLENBQUMsTUFBUixLQUFrQixDQUF6QztBQUFnRCxhQUFoRDs7SUFDQSxJQUFJLENBQUMsR0FBTCxDQUFBO0lBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBQTtJQUNBLE1BQUEsQ0FBQSxFQUpEOztFQU1BLGlCQUFVLGtCQUFrQixDQUFDLEtBQW5CLENBQXlCLEdBQXpCLEdBQVAsU0FBSDtJQUNDLElBQUksQ0FBQyxJQUFMLENBQVUsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFGLENBQU8sT0FBUCxDQUFELENBQWdCLENBQUMsSUFBbEM7SUFDQSxPQUFPLENBQUMsSUFBUixDQUFhLENBQWI7SUFDQSxNQUFBLENBQUEsRUFIRDs7U0FLQSxJQUFBLENBQUE7QUF0Qm1CIiwic291cmNlc0NvbnRlbnQiOlsiZWNobyA9IGNvbnNvbGUubG9nXHJcbnRyZWUgPSBudWxsXHJcbmJ1dHRvbnMgPSBbXVxyXG5cclxuY3VycmVudCA9IG51bGwgIyBwZWthciBww6UgZXR0IGRlbHRyw6RkXHJcblxyXG5wYXRoID0gW10gIyBhbmdlciBoZWxhIHRyw6RkZXRcclxuaW5kZXhlcyA9IFswXSAjIGRlZmF1bHQgbWFya2VyYXMgZsO2cnN0YSB2YWxldFxyXG5cclxuY2xhc3MgQnV0dG9uXHJcblx0Y29uc3RydWN0b3IgOiAoQHRleHQsIEB4LCBAeSwgQGluZGV4KSAtPlxyXG5cdGRyYXcgOiAoKSAtPiBcclxuXHRcdGZpbGwgaWYgQGluZGV4ID09IF8ubGFzdCBpbmRleGVzIHRoZW4gJ3llbGxvdycgZWxzZSAnYmxhY2snXHJcblx0XHR0ZXh0IEB0ZXh0LEB4LEB5XHJcblxyXG53aW5kb3cucHJlbG9hZCA9IC0+IHRyZWUgPSBsb2FkSlNPTiAnbWVudXRyZWUuanNvbidcclxuXHJcbndpbmRvdy5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIDIwMCwgMzAwXHJcblx0bm9TdHJva2UoKVxyXG5cdGN1cnJlbnQgPSBpZiBwYXRoLmxlbmd0aCA9PSAwIHRoZW4gdHJlZSBlbHNlIF8uZ2V0IHRyZWUsIHBhdGhcclxuXHRlY2hvICdwYXRoJyxwYXRoXHJcblx0ZWNobyAnY3VycmVudCcsIGN1cnJlbnRcclxuXHJcblx0a2V5cyA9IF8ua2V5cyBjdXJyZW50XHJcblx0YnV0dG9ucyA9IChuZXcgQnV0dG9uIGtleXNbaV0sMTAsNDArMjAqaSxpIGZvciBpIGluIF8ucmFuZ2Uga2V5cy5sZW5ndGgpXHJcblx0ZWNobyAnYnV0dG9ucycsYnV0dG9uc1xyXG5cclxuXHRkcmF3KClcclxuXHJcbmRyYXcgPSAtPlxyXG5cclxuXHRlY2hvICdkcmF3JywgdHlwZW9mIGN1cnJlbnRcclxuXHRiYWNrZ3JvdW5kICdncmF5J1xyXG5cdGlmICdzdHJpbmcnID09IHR5cGVvZiBjdXJyZW50XHJcblx0XHR0ZXh0IGN1cnJlbnQsMTAsMjAwXHJcblx0aWYgJ29iamVjdCcgPT0gdHlwZW9mIGN1cnJlbnRcclxuXHRcdGZvciBidXR0b24gaW4gYnV0dG9uc1xyXG5cdFx0XHRidXR0b24uZHJhdygpXHJcblx0cyA9IHBhdGguam9pbiAnIOKAoiAnXHJcblx0ZmlsbCAnd2hpdGUnXHJcblx0ZWNobyAncycsc1xyXG5cdHRleHQgcywgMTAsIDIwXHJcblxyXG51cGRhdGUgPSAtPlxyXG5cdGN1cnJlbnQgPSBpZiBwYXRoLmxlbmd0aCA9PSAwIHRoZW4gdHJlZSBlbHNlIF8uZ2V0IHRyZWUsIHBhdGhcclxuXHRrZXlzID0gXy5rZXlzIGN1cnJlbnRcclxuXHRidXR0b25zID0gKG5ldyBCdXR0b24ga2V5c1tpXSwxMCw0MCsyMCppLGkgZm9yIGkgaW4gXy5yYW5nZSBrZXlzLmxlbmd0aClcclxuXHJcbndpbmRvdy5rZXlQcmVzc2VkID0gKCkgLT5cclxuXHRlY2hvIGtleVxyXG5cclxuXHRuID0gaW5kZXhlcy5sZW5ndGhcclxuXHRlY2hvICduJyxuXHJcblx0aW5kZXggPSBpbmRleGVzW24tMV1cclxuXHRpZiBrZXkgPT0gJ0Fycm93RG93bicgdGhlbiBpbmRleCA9IChpbmRleCArIDEpICUlIGJ1dHRvbnMubGVuZ3RoXHJcblx0aWYga2V5ID09ICdBcnJvd1VwJyAgIHRoZW4gaW5kZXggPSAoaW5kZXggLSAxKSAlJSBidXR0b25zLmxlbmd0aFxyXG5cdGluZGV4ZXNbbi0xXSA9IGluZGV4XHJcblx0ZWNobyAnaW5kZXhlcycsaW5kZXhlcyxuXHJcblxyXG5cdGlmIGtleSBpbiAnRXNjYXBlIEFycm93TGVmdCcuc3BsaXQgJyAnXHJcblx0XHRpZiBwYXRoLmxlbmd0aCA9PSAwIG9yIGluZGV4ZXMubGVuZ3RoID09IDEgdGhlbiByZXR1cm5cclxuXHRcdHBhdGgucG9wKClcclxuXHRcdGluZGV4ZXMucG9wKClcclxuXHRcdHVwZGF0ZSgpXHJcblxyXG5cdGlmIGtleSBpbiAnRW50ZXIgQXJyb3dSaWdodCcuc3BsaXQgJyAnXHJcblx0XHRwYXRoLnB1c2ggYnV0dG9uc1tfLmxhc3QgaW5kZXhlc10udGV4dFxyXG5cdFx0aW5kZXhlcy5wdXNoIDBcclxuXHRcdHVwZGF0ZSgpXHJcblxyXG5cdGRyYXcoKVxyXG4iXX0=
//# sourceURL=c:\github\MenuTree\menutree.coffee